- platform: influxdb
  api_version: 2
  ssl: false
  host: !secret influxdb.ip
  port: !secret influxdb.port
  token: !secret influxdb.token
  organization: !secret influxdb.organization_id
  bucket: !secret influxdb.bucket
  queries_flux:
    # Proxmox CPU load
    - name: proxmox.raw_cpu_usage
      group_function: mean
      range_start: -5m
      query: >
        filter(fn: (r) => r._measurement == "cpustat")
        |> filter(fn: (r) => r._field == "cpu")
        |> map(fn: (r) => ({_time: r._time, _value: r._value * 100.0}))
      unit_of_measurement: "%"
      value_template: "{{ value | float }}"
    # Proxmox memory usage
    - name: proxmox.raw_memory_usage
      group_function: last
      range_start: -5m
      query: >
        filter(fn: (r) => r._measurement == "memory" and r._field == "memused")
        |> map(fn: (r) => ({r with _value: float(v: r._value) / 1073741824.0}))
      unit_of_measurement: "GB"
      value_template: "{{ value | float }}"
    # Proxmox storage usage
    - name: proxmox.raw_storage_usage
      group_function: mean
      range_start: -5m
      query: >
        filter(fn: (r) => r._measurement == "system")
        |> filter(fn: (r) => r._field == "used")
      unit_of_measurement: "GB"
      value_template: "{{ value | float }}"
    # Proxmox storage total
    - name: proxmox.raw_storage_total
      group_function: mean
      range_start: -5m
      query: >
        filter(fn: (r) => r._measurement == "system")
        |> filter(fn: (r) => r._field == "total")
      unit_of_measurement: "GB"
      value_template: "{{ value | float }}"
# Proxmox
- platform: template
  sensors:
    # CPU Usage
    proxmox_cpu_usage:
      unit_of_measurement: "%"
      value_template: "{{ '%.2f' | format(states('sensor.proxmox_raw_cpu_usage') | float ) }}"
      friendly_name: "Proxmox CPU Usage"
    # Memory Usage
    proxmox_memory_usage:
      unit_of_measurement: "GB"
      value_template: "{{ '%.2f' | format(states('sensor.proxmox_raw_memory_usage') | float ) }}"
      friendly_name: "Proxmox Memory Usage"
    # Storage Usage
    proxmox_storage_usage:
      unit_of_measurement: "%"
      value_template: "{{ '%.2f' | format((states('sensor.proxmox_raw_storage_usage') | float / states('sensor.proxmox_raw_storage_total') | float) * 100) }}"
      friendly_name: "Proxmox Storage Usage"
# Temperature/Humidity
- platform: template
  sensors:
    # Home temperature
    home_temperature:
      unit_of_measurement: "°C"
      value_template: "{{ '%.1f' | format(((float(states('sensor.termometro_sala_temperature')) + float(states('sensor.termometro_camera_temperature'))) / 2) | float) }}"
      friendly_name: "Home Temperature"
    # Home humidity
    home_humidity:
      unit_of_measurement: "%"
      value_template: "{{ '%.1f' | format(((float(states('sensor.termometro_sala_humidity')) + float(states('sensor.termometro_camera_humidity'))) / 2) | float) }}"
      friendly_name: "Home Humidity"
      icon_template: mdi:water-percent
    # External temperature
    weather_temperature:
      friendly_name: "Weather Temperature"
      unit_of_measurement: "°C"
      value_template: "{{ state_attr('weather.casa', 'temperature') }}"
    # External humidity
    weather_humidity:
      friendly_name: "Weather Humidity"
      unit_of_measurement: '%'
      value_template: "{{ state_attr('weather.casa', 'humidity') }}"
# Garbage collection
- platform: waste_collection_schedule
  name: garbage_collection_trash
  add_days_to: true
  value_template: 'Tra {{value.daysTo}} giorni'
  types:
    - Indifferenziato
- platform: waste_collection_schedule
  name: garbage_collection_organic
  add_days_to: true
  value_template: 'Tra {{value.daysTo}} giorni'
  types:
    - Organico
- platform: waste_collection_schedule
  name: garbage_collection_glass_and_metal
  add_days_to: true
  value_template: 'Tra {{value.daysTo}} giorni'
  types:
    - Vetro e Metallo
- platform: waste_collection_schedule
  name: garbage_collection_paper
  add_days_to: true
  value_template: 'Tra {{value.daysTo}} giorni'
  types:
    - Carta
- platform: waste_collection_schedule
  name: garbage_collection_plastic
  add_days_to: true
  value_template: 'Tra {{value.daysTo}} giorni'
  types:
    - Plastica
# Mold indicator
- platform: mold_indicator
  indoor_temp_sensor: sensor.home_temperature
  indoor_humidity_sensor: sensor.home_humidity
  outdoor_temp_sensor: sensor.weather_temperature
  calibration_factor: 2.0
