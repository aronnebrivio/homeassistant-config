substitutions:
  name: "esp32-01"

esphome:
  name: ${name}
  friendly_name: ${name}
  on_boot:
    then:
      - delay: 1s
      - script.execute: boot_flash

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret esp32-01.api.encryption_key

ota:
  - platform: esphome
    password: !secret esp32-01.ota.password

wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${name} Fallback Hotspot
    password: !secret esp32-01.wifi.ap.password

captive_portal:

output:
  - platform: gpio
    pin: GPIO02
    id: onboard_led

uart:
  tx_pin: GPIO017 # Used by ESPHome PMS Platform to turn off fan/laser
  rx_pin: GPIO016
  baud_rate: 9600

sensor:
  - platform: pmsx003
    type: PMSX003
    pm_1_0:
      name: "Particulate Matter <1.0µm Concentration"
    pm_2_5:
      name: "Particulate Matter <2.5µm Concentration"
    pm_10_0:
      name: "Particulate Matter <10.0µm Concentration"
      # Flash LED when new sample measured
      on_value:
        then:
          - script.execute: flash_sample
    update_interval: 300s

script:
  - id: boot_flash
    mode: single
    then:
      - repeat:
          count: 4
          then:
            - output.turn_on: onboard_led
            - delay: 500ms
            - output.turn_off: onboard_led
            - delay: 500ms

  - id: flash_sample
    mode: single
    then:
      - repeat:
          count: 7
          then:
            - script.execute: flash_double_quick
            - delay: 300ms

  - id: flash_double_quick
    mode: single
    then:
      - output.turn_on: onboard_led
      - delay: 30ms
      - output.turn_off: onboard_led
      - delay: 1ms
      - output.turn_on: onboard_led
      - delay: 30ms
      - output.turn_off: onboard_led

button:
  - platform: restart
    name: Restart
